plugins {
  id 'net.researchgate.release' version '2.4.0'
  id 'java'
  id 'maven'
  id 'signing'
}

sourceCompatibility = 1.8
group = 'com.king.tratt'
archivesBaseName = 'tratt-api'
version = '0.1.0-SNAPSHOT'

task wrapper(type: Wrapper) {
   gradleVersion = '2.10' //version required
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.+'
    compile 'com.google.code.gson:gson:2.+'
    testCompile 'ch.qos.logback:logback-classic:1+'
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'org.jmockit:jmockit:+'
    testCompile 'org.assertj:assertj-core:3.+'
    testCompile 'org.slf4j:slf4j-simple:1.+'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

release {
    preCommitText = ''
    preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
    tagTemplate = '$name-$version'

    git {
        requireBranch = ''
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
    }
}

//signing {
//    sign configurations.archives
//}

uploadArchives {
  repositories {
    mavenDeployer {
//      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Tratt-API'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'A QA tool for testing an event tracking system on an end-to-end level.'
        url 'https://github.com/king/tratt-api'

        scm {
          connection 'scm:git:https://github.com/king/tratt-api.git'
          developerConnection 'scm:git:https://github.com/king/tratt-api.git'
          url 'https://github.com/king/tratt-api'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'alexander-poulikakos'
            name 'Alexander Poulikakos'
            email 'alexander.poulikakos@king.com'
          }
        }
      }
    }
  }
}
